<!DOCTYPE html>
<html>
<head>
    <title>地名解析与线路规划</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <style>
        body {
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            height: 100vh;
            width: 100vw;
        }
        #map {
            flex: 1;
            width: 100%;
        }
        #input-form {
            position: absolute;
            top: 10px;
            left: 45px;
            background: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.2);
            z-index: 1000;
        }
        #input-form input {
            padding: 10px;
            margin: 5px 0;
            border: 1px solid #ccc;
            border-radius: 5px;
            width: 200px;
        }
        #input-form button {
            padding: 10px 20px;
            margin: 10px 5px 0 0;
            border: none;
            background-color: #007bff;
            color: white;
            border-radius: 5px;
            cursor: pointer;
        }
        #input-form button:hover {
            background-color: #0056b3;
        }
        .loading {
            display: none;
            margin-top: 10px;
            color: #007bff;
        }
    </style>
</head>
<body>
    <!--<h1>地名解析与线路规划</h1>-->
    <div id="input-form">
        <input type="text" id="start-location" placeholder="输入起始点">
        <input type="text" id="end-location" placeholder="输入终点">
        <button onclick="planRoute()">解析并显示</button>
        <button onclick="getUserLocation()">获取当前位置</button>
        <div id="loading" class="loading">加载中...</div>
    </div>
    <div id="map"></div>

    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script>
        // 初始化地图
        var map = L.map('map').setView([51.505, -0.09], 13);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '© OpenStreetMap'
        }).addTo(map);

        var startMarker, endMarker, userMarker, routeLayer;

        // 获取用户当前位置
        function getUserLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition, showError);
            } else {
                alert("该浏览器不支持获取地理位置。");
            }
        }

        function showPosition(position) {
            var lat = position.coords.latitude;
            var lon = position.coords.longitude;

            if (userMarker) map.removeLayer(userMarker);

            userMarker = L.marker([lat, lon], {icon: L.icon({
                iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',
                iconSize: [25, 41],
                iconAnchor: [12, 41],
                popupAnchor: [1, -34],
                shadowSize: [41, 41]
            })}).addTo(map)
                .bindPopup(`当前位置<br>纬度: ${lat}<br>经度: ${lon}`)
                .openPopup();

            map.setView([lat, lon], 13);
        }

        function showError(error) {
            switch (error.code) {
                case error.PERMISSION_DENIED:
                    alert("用户拒绝请求地理定位。");
                    break;
                case error.POSITION_UNAVAILABLE:
                    alert("位置信息不可用。");
                    break;
                case error.TIMEOUT:
                    alert("请求用户地理位置超时。");
                    break;
                case error.UNKNOWN_ERROR:
                    alert("未知错误。");
                    break;
            }
        }

        // 解析地名并在地图上显示线路
        function planRoute() {
            var startLocation = document.getElementById('start-location').value;
            var endLocation = document.getElementById('end-location').value;
            var loadingIndicator = document.getElementById('loading');

            if (!startLocation || !endLocation) {
                alert("请输入起始点和终点");
                return;
            }

            loadingIndicator.style.display = 'block';

            var startUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${startLocation}`;
            var endUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${endLocation}`;

            Promise.all([fetch(startUrl), fetch(endUrl)])
                .then(responses => Promise.all(responses.map(response => response.json())))
                .then(data => {
                    loadingIndicator.style.display = 'none';
                    if (data[0].length > 0 && data[1].length > 0) {
                        var startLat = data[0][0].lat;
                        var startLon = data[0][0].lon;
                        var endLat = data[1][0].lat;
                        var endLon = data[1][0].lon;

                        // 更新地图视图
                        map.setView([startLat, startLon], 13);

                        // 添加起始点和终点标记
                        if (startMarker) map.removeLayer(startMarker);
                        if (endMarker) map.removeLayer(endMarker);
                        if (routeLayer) map.removeLayer(routeLayer);

                        startMarker = L.marker([startLat, startLon], { draggable: true }).addTo(map)
                            .bindPopup(`<b>${startLocation}</b><br>纬度: ${startLat}, 经度: ${startLon}`)
                            .openPopup()
                            .on('dragend', onMarkerDrag);

                        endMarker = L.marker([endLat, endLon], { draggable: true }).addTo(map)
                            .bindPopup(`<b>${endLocation}</b><br>纬度: ${endLat}, 经度: ${endLon}`)
                            .openPopup()
                            .on('dragend', onMarkerDrag);

                        // 获取并显示路线
                        getRoute([startLat, startLon], [endLat, endLon]);
                    } else {
                        alert("未找到一个或多个地名的坐标");
                    }
                })
                .catch(error => {
                    loadingIndicator.style.display = 'none';
                    console.log('Error:', error);
                });
        }

        function onMarkerDrag() {
            var startLatLng = startMarker.getLatLng();
            var endLatLng = endMarker.getLatLng();
            getRoute([startLatLng.lat, startLatLng.lng], [endLatLng.lat, endLatLng.lng]);
        }

        // 获取并显示路线
        function getRoute(start, end) {
            var routeUrl = `https://router.project-osrm.org/route/v1/driving/${start[1]},${start[0]};${end[1]},${end[0]}?overview=full&geometries=geojson`;

            fetch(routeUrl)
                .then(response => response.json())
                .then(data => {
                    if (data.routes.length > 0) {
                        var route = data.routes[0].geometry;
                        var distance = (data.routes[0].distance / 1000).toFixed(2); // 距离，单位为公里
                        var duration = (data.routes[0].duration / 60).toFixed(2); // 时间，单位为分钟

                        if (routeLayer) map.removeLayer(routeLayer);

                        routeLayer = L.geoJSON(route, {
                            style: {
                                color: 'blue',
                                weight: 5,
                                opacity: 0.7
                            }
                        }).addTo(map);

                        startMarker.bindPopup(`<b>${startLocation}</b><br>纬度: ${start[0]}, 经度: ${start[1]}<br>距离: ${distance} km<br>时间: ${duration} 分钟`).openPopup();
                        endMarker.bindPopup(`<b>${endLocation}</b><br>纬度: ${end[0]}, 经度: ${end[1]}<br>距离: ${distance} km<br>时间: ${duration} 分钟`).openPopup();
                    } else {
                        alert("无法规划路线");
                    }
                })
                .catch(error => console.log('Error:', error));
        }
    </script>
</body>
</html>
